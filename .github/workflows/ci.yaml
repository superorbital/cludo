name: cludo CI Pipeline
on: [push]
jobs:
  cludo-ci-pipeline:
    permissions:
      id-token: write
      packages: write
      contents: write
    runs-on: ubuntu-latest
    steps:

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.5' # The Go version to download and use.

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: List available build platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install and Run Kustomize
        uses: int128/kustomize-action@v1
        id: kustomize
        with:
          kustomization: k8s/kustomize/overlays/*/kustomization.yaml

      - name: List Kustomize Generated Manifests
        run: find ${{ steps.kustomize.outputs.directory }}

      - name: Install Dependencies
        run: |
          go mod tidy
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Detect Pull Request
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          state: open

      - name: Run Tests
        run: make test

      - name: Get Last Version from Tag
        id: lasttag
        shell: bash
        run: echo ::set-output name=version::$(git describe --abbrev=0 --tags --match 'v[0-9]*\.[0-9]*\.[0-9]*' | cut -c2-)

      - name: Parse Changelog
        id: changelog
        uses: coditory/changelog-parser@v1

      - name: Build and Push Container Images
        # Only build/push on main when there is not already a release
        # But always build/push on other branches
        if: "(github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version) || (github.ref != 'refs/heads/main')"
        run: make docker-build-push
        env:
          BUILDKIT_PROGRESS: plain
          PR_NUM: ${{ steps.findPr.outputs.pr }}

      - name: Build Binaries for Github Release
        # We are on the main branch and do not have an existing tagged release
        if: "github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version"
        run: make build

      - name: Compress Binaries via UPX
        uses: crazy-max/ghaction-upx@v1
        with:
          version: latest
          files: |
            ./builds/*
          args: -fq9

      - name: GitHub Release - Non-Production
        if: "github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version && steps.changelog.outputs.status == 'prerelease'"
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          files: |
            ./builds/*
          prerelease: true
          fail_on_unmatched_files: true
          draft: false
          body: |
            ${{ steps.changelog.outputs.description }}

            ### Container Images
            * [cludo](https://hub.docker.com/r/superorbital/cludo)
            * [cludod](https://hub.docker.com/r/superorbital/cludod)
            
            #### Software Supply Chain Security
            
            We sign all release containers with [cosign](https://github.com/sigstore/cosign/blob/main/KEYLESS.md).
            
            You can verify these signatures using the following commands:
            
            ```sh
            COSIGN_EXPERIMENTAL=1 cosign verify superorbital/cludo:${{ steps.changelog.outputs.version }}
            COSIGN_EXPERIMENTAL=1 cosign verify superorbital/cludod:${{ steps.changelog.outputs.version }}
            ```
            
            ### Binaries
            
            * All binaries are compressed with [UPX](https://upx.github.io/), to save on bandwidth and storage space.
            
          tag_name: ${{ steps.changelog.outputs.version }}
          name: Release ${{ steps.changelog.outputs.version }}

      - name: GitHub Release - Production
        if: "github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version && steps.changelog.outputs.status == 'release'"
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          files: |
            builds/*
          prerelease: false
          fail_on_unmatched_files: true
          draft: false
          body: |
            ${{ steps.changelog.outputs.description }}

            ### Container Images
            * [cludo](https://hub.docker.com/r/superorbital/cludo)
            * [cludod](https://hub.docker.com/r/superorbital/cludod)
            
            #### Software Supply Chain Security
            
            We sign all release containers with [cosign](https://github.com/sigstore/cosign/blob/main/KEYLESS.md).
            
            You can verify these signatures using the following commands:
            
            ```sh
            COSIGN_EXPERIMENTAL=1 cosign verify superorbital/cludo:${{ steps.changelog.outputs.version }}
            COSIGN_EXPERIMENTAL=1 cosign verify superorbital/cludod:${{ steps.changelog.outputs.version }}
            ```
            
            ### Binaries
            
            * All binaries are compressed with [UPX](https://upx.github.io/), to save on bandwidth and storage space.
            
          tag_name: ${{ steps.changelog.outputs.version }}
          name: Release ${{ steps.changelog.outputs.version }}

      - name: Install Cosign
        if: "github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version"
        uses: sigstore/cosign-installer@main

      - name: Add cosign signature to cludo latest
        if: "github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version"
        run: COSIGN_EXPERIMENTAL=1 cosign sign --recursive -a git_sha=$GITHUB_SHA docker.io/superorbital/cludo:latest

      - name: Add cosign signature to cludod latest
        if: "github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version"
        run: COSIGN_EXPERIMENTAL=1 cosign sign --recursive -a git_sha=$GITHUB_SHA docker.io/superorbital/cludod:latest

      - name: Send GitHub Action trigger data to Slack workflow
        id: slack
        if: "github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version && steps.changelog.outputs.status != 'unreleased'"
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "version": "${{ steps.changelog.outputs.version }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

name: cludo CI
on: [ push]
jobs:
  cludo-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.5' # The Go version to download and use.
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: List available build platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Install Dependencies
        run: |
          go mod download
          go install github.com/ahmetb/govvv@latest
          go install github.com/mitchellh/gox@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Detect Pull Request
        uses: jwalton/gh-find-current-pr@v1
        id: findPr
        with:
          state: open
      - name: Run Tests
        run: make test
      - name: Get Last Version from Tag
        id: lasttag
        shell: bash
        run: echo ::set-output name=version::$(git describe --abbrev=0 --tags --match 'v[0-9]*\.[0-9]*\.[0-9]*' | cut -c2-)
      - name: Parse Changelog
        id: changelog
        uses: coditory/changelog-parser@v1
      - name: Build and Push Container Images
        # Only build/push on main when there is not already a release
        # But always build/push on other branches
        if: "(github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version) || (github.ref != 'refs/heads/main')"
        run: make docker-build-push
        env:
          BUILDKIT_PROGRESS: plain
          PR_NUM: ${{ steps.findPr.outputs.pr }}
      - name: Build Binaries for Github Release
        # We are on the main branch and do not have an existing tagged release
        if: "github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version"
        run: make build
      - name: GitHub Release - Non-Production
        if: "github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version && steps.changelog.outputs.status == 'prerelease'"
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          files: |
            builds/*
          prerelease: true
          fail_on_unmatched_files: true
          draft: false
          body: ${{ steps.changelog.outputs.description }}
          tag_name: ${{ steps.changelog.outputs.version }}
          name: Release ${{ steps.changelog.outputs.version }}
      - name: GitHub Release - Production
        if: "github.ref == 'refs/heads/main' && steps.changelog.outputs.version != steps.lasttag.outputs.version && steps.changelog.outputs.status == 'release'"
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
          files: |
            builds/*
          prerelease: false
          fail_on_unmatched_files: true
          draft: false
          body: ${{ steps.changelog.outputs.description }}
          tag_name: ${{ steps.changelog.outputs.version }}
          name: Release ${{ steps.changelog.outputs.version }}

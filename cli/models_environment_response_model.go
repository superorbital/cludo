// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/spf13/cobra"
	"github.com/superorbital/cludo/models"
)

// register flags to command
func registerModelsEnvironmentResponseFlags(cmdPrefix string, cmd *cobra.Command) error {

	if err := registerModelsEnvironmentResponseBundle(cmdPrefix, cmd); err != nil {
		return err
	}

	return nil
}

func registerModelsEnvironmentResponseBundle(cmdPrefix string, cmd *cobra.Command) error {
	// warning: bundle ModelsEnvironmentBundle map type is not supported by go-swagger cli yet

	return nil
}

// retrieve flags from commands, and set value in model. Return true if any flag is passed by user to fill model field.
func retrieveModelsEnvironmentResponseFlags(m *models.ModelsEnvironmentResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false

	err, bundleAdded := retrieveModelsEnvironmentResponseBundleFlags(m, cmdPrefix, cmd)
	if err != nil {
		return err, false
	}
	retAdded = retAdded || bundleAdded

	return nil, retAdded
}

func retrieveModelsEnvironmentResponseBundleFlags(m *models.ModelsEnvironmentResponse, cmdPrefix string, cmd *cobra.Command) (error, bool) {
	retAdded := false
	bundleFlagName := fmt.Sprintf("%v.bundle", cmdPrefix)
	if cmd.Flags().Changed(bundleFlagName) {
		// warning: bundle map type ModelsEnvironmentBundle is not supported by go-swagger cli yet
	}
	return nil, retAdded
}
